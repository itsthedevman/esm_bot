# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `steam_web_api` gem.
# Please instead update this file by running `bin/tapioca gem steam_web_api`.

# source://steam_web_api//lib/steam_web_api/version.rb#1
module SteamWebApi
  class << self
    # source://steam_web_api//lib/steam_web_api.rb#19
    def config; end

    # Sets the attribute config
    #
    # @param value the value to set the attribute config to.
    #
    # source://steam_web_api//lib/steam_web_api.rb#17
    def config=(_arg0); end

    # @yield [config]
    #
    # source://steam_web_api//lib/steam_web_api.rb#23
    def configure; end
  end
end

# source://steam_web_api//lib/steam_web_api/base.rb#5
class SteamWebApi::Base
  # source://steam_web_api//lib/steam_web_api/base.rb#32
  def build_response(main_key, &block); end

  # source://steam_web_api//lib/steam_web_api/base.rb#24
  def get(path, search_params = T.unsafe(nil)); end

  # source://steam_web_api//lib/steam_web_api/base.rb#28
  def parse_response; end

  # Returns the value of attribute response.
  #
  # source://steam_web_api//lib/steam_web_api/base.rb#9
  def response; end

  # Sets the attribute response
  #
  # @param value the value to set the attribute response to.
  #
  # source://steam_web_api//lib/steam_web_api/base.rb#9
  def response=(_arg0); end

  class << self
    # source://steam_web_api//lib/steam_web_api/base.rb#13
    def build_response(response, main_key); end
  end
end

# source://steam_web_api//lib/steam_web_api/base.rb#7
SteamWebApi::Base::BASE_URI = T.let(T.unsafe(nil), String)

# source://steam_web_api//lib/steam_web_api/configuration.rb#3
class SteamWebApi::Configuration
  # Returns the value of attribute api_key.
  #
  # source://steam_web_api//lib/steam_web_api/configuration.rb#5
  def api_key; end

  # Sets the attribute api_key
  #
  # @param value the value to set the attribute api_key to.
  #
  # source://steam_web_api//lib/steam_web_api/configuration.rb#5
  def api_key=(_arg0); end
end

# source://steam_web_api//lib/steam_web_api/game.rb#3
class SteamWebApi::Game < ::SteamWebApi::Base
  # @return [Game] a new instance of Game
  #
  # source://steam_web_api//lib/steam_web_api/game.rb#7
  def initialize(game_id); end

  # source://steam_web_api//lib/steam_web_api/game.rb#25
  def achievement_percentages; end

  # Returns the value of attribute game_id.
  #
  # source://steam_web_api//lib/steam_web_api/game.rb#5
  def game_id; end

  # source://steam_web_api//lib/steam_web_api/game.rb#30
  def news(count: T.unsafe(nil), max_length: T.unsafe(nil)); end

  # source://steam_web_api//lib/steam_web_api/game.rb#20
  def schema; end

  class << self
    # source://steam_web_api//lib/steam_web_api/game.rb#13
    def all; end
  end
end

# source://steam_web_api//lib/steam_web_api/player.rb#3
class SteamWebApi::Player < ::SteamWebApi::Base
  # @return [Player] a new instance of Player
  #
  # source://steam_web_api//lib/steam_web_api/player.rb#7
  def initialize(steam_id); end

  # source://steam_web_api//lib/steam_web_api/player.rb#41
  def achievements(app_id, options = T.unsafe(nil)); end

  # source://steam_web_api//lib/steam_web_api/player.rb#66
  def bans; end

  # source://steam_web_api//lib/steam_web_api/player.rb#51
  def friends(relationship = T.unsafe(nil)); end

  # source://steam_web_api//lib/steam_web_api/player.rb#31
  def owned_games(options = T.unsafe(nil)); end

  # source://steam_web_api//lib/steam_web_api/player.rb#61
  def playing_shared_game(app_id); end

  # source://steam_web_api//lib/steam_web_api/player.rb#56
  def recently_played_games(count = T.unsafe(nil)); end

  # source://steam_web_api//lib/steam_web_api/player.rb#36
  def stats_for_game(app_id); end

  # Returns the value of attribute steam_id.
  #
  # source://steam_web_api//lib/steam_web_api/player.rb#5
  def steam_id; end

  # Sets the attribute steam_id
  #
  # @param value the value to set the attribute steam_id to.
  #
  # source://steam_web_api//lib/steam_web_api/player.rb#5
  def steam_id=(_arg0); end

  # source://steam_web_api//lib/steam_web_api/player.rb#46
  def summary; end

  private

  # source://steam_web_api//lib/steam_web_api/player.rb#90
  def achievements_options(game_id, options); end

  # source://steam_web_api//lib/steam_web_api/player.rb#94
  def friends_list_options(relationship); end

  # source://steam_web_api//lib/steam_web_api/player.rb#73
  def get_first_data(data); end

  # source://steam_web_api//lib/steam_web_api/player.rb#81
  def owned_games_options(options); end

  # source://steam_web_api//lib/steam_web_api/player.rb#98
  def recent_games_options(count); end

  # source://steam_web_api//lib/steam_web_api/player.rb#102
  def shared_game_options(app_id); end

  # source://steam_web_api//lib/steam_web_api/player.rb#86
  def stats_for_game_options(game_id); end

  class << self
    # source://steam_web_api//lib/steam_web_api/player.rb#18
    def bans(*ids); end

    # source://steam_web_api//lib/steam_web_api/player.rb#13
    def summary(*ids); end

    private

    # source://steam_web_api//lib/steam_web_api/player.rb#25
    def options(*ids); end
  end
end

# source://steam_web_api//lib/steam_web_api/version.rb#2
SteamWebApi::VERSION = T.let(T.unsafe(nil), String)
