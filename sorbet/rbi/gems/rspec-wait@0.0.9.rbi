# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rspec-wait` gem.
# Please instead update this file by running `bin/tapioca gem rspec-wait`.

# source://rspec-wait//lib/rspec/wait/error.rb#1
module RSpec
  class << self
    # source://rspec-core/3.12.0/lib/rspec/core.rb#70
    def clear_examples; end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#85
    def configuration; end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#49
    def configuration=(_arg0); end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#97
    def configure; end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#194
    def const_missing(name); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def context(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#122
    def current_example; end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#128
    def current_example=(example); end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#154
    def current_scope; end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#134
    def current_scope=(scope); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def describe(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def example_group(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def fcontext(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def fdescribe(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#58
    def reset; end

    # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#110
    def shared_context(name, *args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#110
    def shared_examples(name, *args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core/shared_example_group.rb#110
    def shared_examples_for(name, *args, &block); end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#160
    def world; end

    # source://rspec-core/3.12.0/lib/rspec/core.rb#49
    def world=(_arg0); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def xcontext(*args, &example_group_block); end

    # source://rspec-core/3.12.0/lib/rspec/core/dsl.rb#42
    def xdescribe(*args, &example_group_block); end
  end
end

# source://rspec-wait//lib/rspec/wait/error.rb#2
module RSpec::Wait
  private

  # source://rspec-wait//lib/rspec/wait.rb#16
  def wait(timeout = T.unsafe(nil), options = T.unsafe(nil)); end

  # From: https://github.com/rspec/rspec-expectations/blob/v3.0.0/lib/rspec/expectations/syntax.rb#L72-L74
  #
  # source://rspec-wait//lib/rspec/wait.rb#12
  def wait_for(value = T.unsafe(nil), &block); end

  # source://rspec-wait//lib/rspec/wait.rb#21
  def with_wait(options); end

  class << self
    # source://rspec-wait//lib/rspec/wait.rb#16
    def wait(timeout = T.unsafe(nil), options = T.unsafe(nil)); end

    # From: https://github.com/rspec/rspec-expectations/blob/v3.0.0/lib/rspec/expectations/syntax.rb#L72-L74
    #
    # source://rspec-wait//lib/rspec/wait.rb#12
    def wait_for(value = T.unsafe(nil), &block); end

    # source://rspec-wait//lib/rspec/wait.rb#21
    def with_wait(options); end
  end
end

# source://rspec-wait//lib/rspec/wait/error.rb#3
class RSpec::Wait::Error < ::StandardError; end

# source://rspec-wait//lib/rspec/wait/handler.rb#5
module RSpec::Wait::Handler
  # source://rspec-wait//lib/rspec/wait/handler.rb#6
  def handle_matcher(target, *args, &block); end
end

# From: https://github.com/rspec/rspec-expectations/blob/v3.0.0/lib/rspec/expectations/handler.rb#L66-L93
#
# source://rspec-wait//lib/rspec/wait/handler.rb#32
class RSpec::Wait::NegativeHandler < ::RSpec::Expectations::NegativeExpectationHandler
  extend ::RSpec::Wait::Handler
end

# From: https://github.com/rspec/rspec-expectations/blob/v3.0.0/lib/rspec/expectations/handler.rb#L44-L63
#
# source://rspec-wait//lib/rspec/wait/handler.rb#27
class RSpec::Wait::PositiveHandler < ::RSpec::Expectations::PositiveExpectationHandler
  extend ::RSpec::Wait::Handler
end

# source://rspec-wait//lib/rspec/wait/proxy.rb#3
class RSpec::Wait::Proxy
  # @return [Proxy] a new instance of Proxy
  #
  # source://rspec-wait//lib/rspec/wait/proxy.rb#4
  def initialize(options); end

  # source://rspec-wait//lib/rspec/wait/proxy.rb#8
  def for(value = T.unsafe(nil), &block); end
end

# source://rspec-wait//lib/rspec/wait/target.rb#4
class RSpec::Wait::Target < ::RSpec::Expectations::ExpectationTarget
  # From: https://github.com/rspec/rspec-expectations/blob/v3.0.0/lib/rspec/expectations/expectation_target.rb#L25-L27
  #
  # @return [Target] a new instance of Target
  #
  # source://rspec-wait//lib/rspec/wait/target.rb#22
  def initialize(target, options); end

  # From: https://github.com/rspec/rspec-expectations/blob/v3.0.0/lib/rspec/expectations/expectation_target.rb#L66-L67
  #
  # source://rspec-wait//lib/rspec/wait/target.rb#34
  def not_to(matcher = T.unsafe(nil), message = T.unsafe(nil), &block); end

  # From: https://github.com/rspec/rspec-expectations/blob/v3.0.0/lib/rspec/expectations/expectation_target.rb#L53-L54
  #
  # source://rspec-wait//lib/rspec/wait/target.rb#28
  def to(matcher = T.unsafe(nil), message = T.unsafe(nil), &block); end

  # From: https://github.com/rspec/rspec-expectations/blob/v3.0.0/lib/rspec/expectations/expectation_target.rb#L66-L67
  #
  # source://rspec-wait//lib/rspec/wait/target.rb#34
  def to_not(matcher = T.unsafe(nil), message = T.unsafe(nil), &block); end

  private

  # source://rspec-wait//lib/rspec/wait/target.rb#43
  def with_wait; end

  class << self
    # From: https://github.com/rspec/rspec-expectations/blob/v3.0.0/lib/rspec/expectations/expectation_target.rb#L30-L41
    #
    # source://rspec-wait//lib/rspec/wait/target.rb#8
    def for(value, block, options = T.unsafe(nil)); end
  end
end

# From: https://github.com/rspec/rspec-expectations/blob/v3.0.0/lib/rspec/expectations/expectation_target.rb#L22
#
# source://rspec-wait//lib/rspec/wait/target.rb#5
module RSpec::Wait::Target::UndefinedValue; end

# source://rspec-wait//lib/rspec/wait/error.rb#5
class RSpec::Wait::TimeoutError < ::RSpec::Wait::Error; end
