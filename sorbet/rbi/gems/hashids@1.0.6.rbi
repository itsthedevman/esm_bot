# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `hashids` gem.
# Please instead update this file by running `bin/tapioca gem hashids`.

# source://hashids//lib/hashids.rb#3
class Hashids
  # @return [Hashids] a new instance of Hashids
  #
  # source://hashids//lib/hashids.rb#18
  def initialize(salt = T.unsafe(nil), min_hash_length = T.unsafe(nil), alphabet = T.unsafe(nil)); end

  # Returns the value of attribute alphabet.
  #
  # source://hashids//lib/hashids.rb#16
  def alphabet; end

  # source://hashids//lib/hashids.rb#46
  def decode(hash); end

  # source://hashids//lib/hashids.rb#52
  def decode_hex(hash); end

  # source://hashids//lib/hashids.rb#26
  def encode(*numbers); end

  # source://hashids//lib/hashids.rb#36
  def encode_hex(str); end

  # Returns the value of attribute guards.
  #
  # source://hashids//lib/hashids.rb#16
  def guards; end

  # Returns the value of attribute min_hash_length.
  #
  # source://hashids//lib/hashids.rb#16
  def min_hash_length; end

  # Returns the value of attribute salt.
  #
  # source://hashids//lib/hashids.rb#16
  def salt; end

  # Returns the value of attribute seps.
  #
  # source://hashids//lib/hashids.rb#16
  def seps; end

  protected

  # source://hashids//lib/hashids.rb#143
  def consistent_shuffle(alphabet, salt); end

  # source://hashids//lib/hashids.rb#163
  def hash(input, alphabet); end

  # source://hashids//lib/hashids.rb#114
  def internal_decode(hash, alphabet); end

  # source://hashids//lib/hashids.rb#65
  def internal_encode(numbers); end

  # source://hashids//lib/hashids.rb#176
  def unhash(input, alphabet); end

  private

  # @return [Boolean]
  #
  # source://hashids//lib/hashids.rb#284
  def hex_string?(string); end

  # source://hashids//lib/hashids.rb#288
  def pick_characters(array, index); end

  # source://hashids//lib/hashids.rb#192
  def setup_alphabet; end

  # source://hashids//lib/hashids.rb#238
  def setup_guards; end

  # source://hashids//lib/hashids.rb#203
  def setup_seps; end

  # source://hashids//lib/hashids.rb#292
  def uniq_characters(string); end

  # source://hashids//lib/hashids.rb#277
  def validate_alphabet; end

  # source://hashids//lib/hashids.rb#255
  def validate_attributes; end
end

# source://hashids//lib/hashids.rb#252
class Hashids::AlphabetError < ::ArgumentError; end

# source://hashids//lib/hashids.rb#12
Hashids::DEFAULT_ALPHABET = T.let(T.unsafe(nil), String)

# source://hashids//lib/hashids.rb#10
Hashids::DEFAULT_SEPS = T.let(T.unsafe(nil), String)

# source://hashids//lib/hashids.rb#8
Hashids::GUARD_DIV = T.let(T.unsafe(nil), Float)

# source://hashids//lib/hashids.rb#253
class Hashids::InputError < ::ArgumentError; end

# source://hashids//lib/hashids.rb#6
Hashids::MIN_ALPHABET_LENGTH = T.let(T.unsafe(nil), Integer)

# source://hashids//lib/hashids.rb#251
class Hashids::MinLengthError < ::ArgumentError; end

# source://hashids//lib/hashids.rb#7
Hashids::SEP_DIV = T.let(T.unsafe(nil), Float)

# source://hashids//lib/hashids.rb#250
class Hashids::SaltError < ::ArgumentError; end

# source://hashids//lib/hashids.rb#4
Hashids::VERSION = T.let(T.unsafe(nil), String)
