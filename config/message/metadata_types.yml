# This file controls how the "data" part of a message is parsed (when receiving) and built (when sending)
#
# Structure:
#
#   <data_name>:
#     <field>:
#       type: <type_name>
#       subtype:
#         type: <type_name>
#         optional: true/false
#       optional: true/false
#
# Field attributes:
#
#   type: <type_name>
#     The data type that this value is or needs to be converted to.
#     This type must match the Rust's equivalent Data type
#
#     Available types
#       any
#         Only accepts a string/nil, but will attempt to parse the value from it.
#         Accepts any JSON type or nil (stringify!)
#       string
#       integer
#       hash
#       array
#       hash_map
#         Arma 3's createHashMap represented as a String -> "[[key, value], [key, value]]"
#       date_time
#       date
#       float
#       boolean
#
#   subtype: <subtype>
#     Only for "type: array", and is optional (disabled by default)
#     If provided, each element in the array will be checked/converted
#
#   optional: true/false
#     Optional, defaults to false
#     Controls if the value can be be `nil` or not (Option<T>)

empty: {}

command:
  player:
    type: hash_map
  target:
    type: hash_map
    optional: true

###########################
## AUTOMATIC TESTS
###########################
metadata_test:
  bar:
    type: string
###########################
